<Module xmlns="https://niap-ccevs.org/cc/v1" xmlns:sec="https://niap-ccevs.org/cc/v1/section" xmlns:h="http://www.w3.org/1999/xhtml" boilerplate="yes" target-product="Software Defined Networking Controller" name="PP-Module for Software Defined Networking Controller">
  
 
  <PPReference>
    <ReferenceTable>
      <PPVersion>1.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2024-10-31</PPPubDate>
      <Keywords>SDN; software defined networking</Keywords>      
    </ReferenceTable>
  </PPReference>

  <RevisionHistory>
    <entry>
      <version>1.0</version>
      <date>2024-10-31</date>
      <subject>First draft of version 1.0 for comment</subject>
    </entry>
  </RevisionHistory>  
  
  <release-notes><h:h3>TDs Applied</h:h3></release-notes><sec:Introduction>
    <sec:Overview>          

            The scope of this Protection Profile Module (PP-Module) is to describe the security functionality of a software defined network (SDN) controller in terms of  <xref g="CC"/> and to define functional and assurance requirements for such
            products. 
            
            
            An SDN Controller is a central component of an SDN system and is available as a logical or a physical device. An SDN Controller manages and distributes network policies, collects network routing and payload information from the control and data planes, and interfaces with user applications in the management plane for functions such as configuration and logging. Each of the planes in an SDN system is composed of multiple logical or physical components. The SDN Controller logically separates the data plane from the control plane and centralizes control which enhances network flexibility and scalability through more efficient network management.
            
            This PP-Module is intended for use with the following Base-PP:
            
            <h:ul>
              <h:li>collaborative Protection Profile for Network Devices (NDcPP), Version 4.0</h:li>
            </h:ul>
            
            This Base-PP is valid because an SDN controller is a specific implementation of a network device. Specifically, an SDN controller is one of many components of an SDN networking architecture. Specifically, an SDN controller manages and distributes network policies, collects routing and payload information from the data plane, and interfaces with user applications in the management plane. Each of the planes in an SDN system is composed of multiple logical or physical components. SDN controllers logically centralize the network intelligence and state in the control plane. 
    </sec:Overview>
    <tech-terms>
      <term abbr="ABAC" full="Attribute-Based Access Control"/>
      <term abbr="AES" full="Advanced Encryption Standard"/>
      <term abbr="APT" full="Advanced Persistent Threats"/>
      <term abbr="ANSI" full="American National Standards Institute"/>
      <term full="Address Space Layout Randomization" abbr="ASLR">
	       An anti-exploitation feature which loads memory mappings into unpredictable locations. ASLR makes it more difficult for an attacker to redirect control to code
	       that they have introduced into the address space of a process.
      </term>
      <term full="Administrator">
	       An administrator is responsible for management activities, including setting policies that are applied by the enterprise on the operating system. This administrator
	       could be acting remotely through a management server, from which the system receives configuration policies. An administrator can enforce settings on the system 
	       which cannot be overridden by non-administrator users.
      </term>
      <term full="Application" abbr="app">
	       Software that runs on a platform and performs tasks on behalf of the user or owner of the platform, as well as its supporting documentation. 
      </term>
      <term full="Application Programming Interface" abbr="API">
	       A specification of routines, data structures, object classes, and variables that allows an application to make use of services provided by another software
	       component, such as a library. APIs are often provided for a set of libraries included with the platform.
      </term>
      <!-- <term full="Biometric Authentication Factor" abbr="BAF" plural="BAFs"> Authentication factor, which uses -->
      <!--   biometric sample, matched to a biometric authentication template to help establish -->
      <!--   identity.</term> -->
      <term abbr="CESG" full="Communications-Electronics Security Group"/>
      <term abbr="CLI" full="Command-Line Interface"/>
      <term abbr="CMC" full="Certificate Management over CMS"/>
      <term abbr="CMS" full="Cryptographic Message Syntax"/>
      <term abbr="CN" full="Common Names"/>
      <term full="Credential">
	       Data that establishes the identity of a user (e.g., a cryptographic key or password).
      </term>
      <term abbr="CRL" full="Certificate Revocation List"/>
      <term abbr="CRUD" full="Create, Read, Update, Delete"/>
      <term abbr="CSA" full="Computer Security Act"/>
      <term full="Control Plane">
          A logical entity that receives instructions or requirements from the SDN application layer through its northbound interface and relays them to the data plane through
          its southbound interface. The controller extracts information about the network from the data plane and communicates back to the SDN application layer with an 
          abstract view of the network, including statistics and events about what is happening. 
      </term>
      <term full="Critical Security Parameters" abbr="CSP">
	       Information that is either user or system defined and is used to operate a cryptographic module in processing encryption functions including cryptographic keys and
	       authentication data, such as passwords, the disclosure or modification of which can compromise the security of a cryptographic module or the security of the
	       information protected by the module.
      </term>
      <term full="Data At Rest" abbr="DAR"/>
      <term full="DAR Protection">
	       Countermeasures that prevent attackers, even those with physical access, from extracting data from non-volatile storage. Common techniques include data encryption
	       and wiping.
      </term>
      <term full="Data Execution Prevention" abbr="DEP">
	       An anti-exploitation feature of modern operating systems executing on modern computer hardware, which enforces a non-execute permission on pages of memory. DEP
	       prevents pages of memory from containing both data and instructions, which makes it more difficult for an attacker to introduce and execute code.
      </term>
      <term full="Data Plane">
        Controls the forwarding and data processing capabilities for the network. This includes forwarding and processing of the data path.
      </term>
      <term abbr="DES" full="Data Encryption Standard"/>
      <term full="Developer">
	       An entity that writes OS software. For the purposes of this document, vendors and developers are the same.
      </term>
      <term abbr="DHE" full="Diffie-Hellman Ephemeral"/>
      <term abbr="DNS" full="Domain Name System"/>
      <term abbr="DRBG" full="Deterministic Random Bit Generator"/>
      <term abbr="DSS" full="Digital Signature Standard"/>
      <term abbr="DT" full="Date/Time Vector"/>
      <term abbr="DTLS" full="Datagram Transport Layer Security"/>
      <term abbr="EAP" full="Extensible Authentication Protocol"/>
      <term abbr="ECDHE" full="Elliptic Curve Diffie-Hellman Ephemeral"/>
      <term abbr="ECDSA" full="Elliptic Curve Digital Signature Algorithm"/>
      <term abbr="ESR" full="Equivalent Series Resistance"/>
      <term abbr="EST" full="Enrollment over Secure Transport"/>
      <term abbr="FIPS" full="Federal Information Processing Standards"/>      
      <term full="Hybrid Authentication">
	       A hybrid authentication factor is one where a user has to submit a combination of a cryptographic token and a PIN or password and both must pass. If either factor
	       fails, the entire attempt fails.
      </term>
      <term abbr="HMAC" full="Hash-based Message Authentication Code"/>
      <term full="Host-based Firewall">
	       A software-based firewall implementation running on the OS for filtering inbound and outbound network traffic to and from processes running on the OS.
      </term>
      <term abbr="HTTP" full="Hypertext Transfer Protocol"/>
      <term abbr="HTTPS" full="Hypertext Transfer Protocol Secure"/>
      <term abbr="IETF" full="Internet Engineering Task Force"/>
      <term abbr="IP" full="Internet Protocol"/>
      <term abbr="ISO" full="International Organization for Standardization"/>
      <term abbr="IT" full="Information Technology"/>
      <term abbr="ITSEF" full="Information Technology Security Evaluation Facility"/>
      <term full="Management Plane">
        Composed of programs that communicate behaviors and needed resources with the SDN controller via application programming interfaces (APIs).
        In addition, the applications can build an abstracted view of the network by collecting information from the controller for decision-making purposes. These 
        applications could include networking management, analytics, or business applications used to run large data centers. For example, an analytics application might be
        built to recognize suspicious network activity for security purposes. This is sometimes also referred to as the Orchestration Layer.
      </term>
      <term abbr="MFA" full="Multi-Factor Authentication"/>
      <term abbr="MITM" full="Man-in-the-Middle"/>
      <term abbr="NAT" full="Network Address Translation"/>
      <term abbr="NFC" full="Near Field Communication"/>
      <term abbr="NIAP" full="National Information Assurance Partnership"/>
      <term abbr="NIST" full="National Institute of Standards and Technology"/>
      <term full="Northbound">Communications between an SDN and applications in the management plane.</term>
      <term abbr="OCSP" full="Online Certificate Status Protocol"/>
      <term abbr="OID" full="Object Identifier"/>
      <term abbr="OMB" full="Office of Management and Budget"/>
      <term abbr="OS" full="Operating System">
	       Software that manages physical and logical resources and provides services for applications. The terms TOE and OS are interchangeable in this
	       document. 
      </term>
      <term abbr="OWASP" full="Open Worldwide Application Security Project"/>
      <term abbr="PIN" full="Personal Identification Number">
	       An authentication factor that is comprised of a set of numeric or alphabetic characters that may be used  in addition to a cryptographic token to provide a hybrid
	       authentication factor. At this time it  is not considered as a stand-alone authentication mechanism. A PIN is distinct from a password in that the allowed character
	       set and required length of a PIN is typically smaller than that of a password as it is designed to be input quickly.
      </term>
      <term abbr="PKI" full="Public Key Infrastructure"/>
      <term abbr="PP" full="Protection Profile"/>
      <term abbr="RBAC" full="Role-Based Access Control"/>
      <term abbr="RBG" full="Random Bit Generator"/>
      <term abbr="REST" full="Representational State Transfer"/>
      <term abbr="RFC" full="Request for Comment"/>
      <term abbr="RNG" full="Random Number Generator"/>
      <!-- <term abbr='RNGVS' full="Random Number Generator Validation System"/> -->
      <term full="Personally Identifiable Information" abbr="PII">
	       Any information about an individual maintained by an agency, including, but not limited to, education, financial transactions, medical history, and criminal or
	       employment history, and information which can be used to distinguish or trace an individual's identity, such as their name, social security number, date and place
	       of birth, mother's maiden name, biometric records, etc., including any other personal information which is linked or linkable to an individual.
      </term>
      <term abbr="SAN" full="Subject Alternative Name"/>
      <term abbr="SAR" full="Security Assurance Requirements"/>
      <term abbr="SDN" full="Software Defined Networking"/>
      <term abbr="SFR" full="Security Functional Requirements"/>
      <term abbr="SHA" full="Secure Hash Algorithm"/>
      <term abbr="S/MIME" full="Secure/Multi-purpose Internet Mail Extensions"/>
      <term full="Sensitive Data">
	       Sensitive data may include all user or enterprise data or may be specific application data such as PII, emails, messaging, documents, calendar items, and contacts.
	       Sensitive data must minimally include credentials and keys. Sensitive data shall be identified in the OS's TSS by the ST author. 
      </term>
      <term abbr="SIP" full="Session Initiation Protocol"/>
      <term full="Southbound">Communications between an SDN and network devices in the data plane.</term>
      <term abbr="SWID" full="Software Identification"/>
      <term abbr="TLS" full="Transport Layer Security"/>
      <term abbr="URI" full="Uniform Resource Identifier"/>
      <term abbr="URL" full="Uniform Resource Locator"/>
      <term abbr="USB" full="Universal Serial Bus"/>
      <term full="User">
	       A user is subject to configuration policies applied to the operating system by administrators.  On some systems, under certain configurations, a normal user can
	       temporarily elevate privileges to that of an administrator. At that time, such a user should be considered an administrator.
      </term>
      <term abbr="VM" full="Virtual Machine"/>
      <term abbr="VPN" full="Virtual Private Network"/>
      <term abbr="XCCDF" full="eXtensible Configuration Checklist Description Format"/>
      <term abbr="XOR" full="Exclusive Or"/>
    </tech-terms>
    
    <sec:Compliant_Targets_of_Evaluation> 
      A conformant TOE decouples its data and control planes such that data traffic and control traffic are restricted
      to their respective planes. It also enforces centralization of control so that all components of the SDN environment
      are under its control. This can expand across multiple distributed controllers for large, complex, or geographically
      dispersed networks. Compliant TOEs will implement necessary functionality in a "do no harm" manner with respect to network security. Specifically:
      <h:ul>
        <h:li>They can be remotely managed in a secure manner.</h:li>
        <h:li>Any software/firmware updates are from a trusted source.</h:li>
        <h:li>Any interfaces to applications, VMs, and other devices are trusted (zone of trust).</h:li>
        <h:li>All security-relevant events are reported.</h:li>
        <h:li>The control plane and data plane are logically separated.</h:li>
        <h:li>The control plane and management plane are logically separated.</h:li>
        <h:li>Data that is collected by the control plane and distributed to the data plane, such as flow tables and configurations, is protected.</h:li>
        <h:li>Data that is collected by the control plane and distributed to the management plane, such as auditable events and traffic or packet statistics, is protected.</h:li>
        <h:li>Data that is collected, distributed, and shared within the control plane, such as when multiple SDN controllers exist in the architecture, is protected.</h:li>
      </h:ul>
      <sec:TOE_Boundary>
        The TOE boundary for an SDN controller is one or more physical or virtual devices. An SDN controller may be a distributed TOE, as defined by the Base-PP.
        <h:ul>
          <h:li>In a physical standalone SDN controller device, the device's hardware, firmware, and software define the evaluation boundary.</h:li>
          <h:li>In a virtual SDN controller, the software of the Virtual Machine (VM) defines the evaluation boundary.</h:li>
          <h:li>All security functionality is contained and executed within the evaluation boundary of the SDN controller.</h:li>
        </h:ul>
      <h:p>  
        The following figure shows the SDN controller sitting between the management and data planes within the SDN infrastructure. This is a simplified diagram of the TOE's position in an SDN deployment. Other dependencies that are necessary to meet security requirements, such as an audit server, remote management interface, or source of certificate revocation information are not shown.
        <figure entity="images/sdncontroller.png" title="High-Level SDN Representation" id="toe-as-apponos"/>
      </h:p>
        <h:p>
          The following elements of an SDN controller are outside the scope of this PP-Module and are therefore considered to be non-interfering with respect to security, even if they are included as part of a compliant product:
          <h:ul>
            <h:li>Examination of data plane content, such as virus or email scanning.</h:li>
            <h:li>Intrusion detection or prevention capabilities.</h:li>
            <h:li>Network Address Translation (NAT) as a security function.</h:li>
            <h:li>If the TOE boundary is a single virtual machine, the hardware or firmware of the underlying platform.</h:li>
            <h:li>If the TOE boundary is a single virtual machine, the host operating system or runtime environment.</h:li>
            <h:li>Specific security functionality that is not global to all SDN controllers (e.g. firewall, load balancing).</h:li>
            <h:li>Other objects belonging in the data plane.</h:li>
          </h:ul>
        </h:p>
      </sec:TOE_Boundary>
    
    </sec:Compliant_Targets_of_Evaluation>
        <!-- Information needs to be added here. -->  
    <sec:Use_Cases>Requirements in this PP-Module are designed to address the security problems in at least the following use cases. These use cases are 
        intentionally very broad, as many specific use cases exist for an SDN controller These use cases may also overlap with one another. An SDN controller's 
        functionality may even be effectively extended by privileged applications installed on it. However, these are out of scope of this PP.
      <usecases>
        <usecase title="Standalone Physical Device" id="standalonephysdev">
          <description>	          
            The TOE is a single physical appliance that provides SDN controller functionality.             
          </description>
        </usecase>
        <usecase title="Virtual Device" id="virtualdev">
          <description>
            The TOE is a virtual machine that provides SDN controller functionality. The TOE boundary is either limited to the virtual machine or includes the hypervisor and underlying physical hardware, depending on whether or not the hypervisor may include virtual machines that are not part of the SDN controller. 
          </description>
        </usecase>
        <usecase title="Cluster (stand-alone or virtual)" id="standorvirtcluster">
          <description>
            Regardless of whether the TOE is physical, virtual, or both, it includes multiple distinct instances that are combined into a distributed cluster.
          </description>
        </usecase>
        <usecase title="Hyper-Converge" id="hypercov">
          <description>
            The TOE amalgamates various computing resources into a single unit for storage-centric, server-centric, or hybrid (storage-server) workloads.
          </description>
        </usecase>
      </usecases>
    </sec:Use_Cases>
  </sec:Introduction>
    
    <sec:Conformance_Claims boilerplate="no">
      <!-- The new CClaimsInfo construct -->
      <CClaimsInfo cc-version="cc-2022r1" cc-approach="direct-rationale">
        <cc-st-conf>exact</cc-st-conf>       
        <cc-pt2-conf>extended</cc-pt2-conf>
        <cc-pt3-conf>conformant</cc-pt3-conf>
        <cc-pp-conf>
          <PP-cc-ref>Protection Profile for Certification Authorities, v3.0</PP-cc-ref>
        </cc-pp-conf>
        <cc-pp-config-with>
          <Mod-cc-ref>collaborative Protection Profile Module for Stateful Traffic Filter Firewalls,
            version 2.0</Mod-cc-ref>
          <Mod-cc-ref>PP-Module for Authentication Servers, version 2.0</Mod-cc-ref>
          <Mod-cc-ref>PP-Module for MACsec Ethernet Encryption, version 2.0</Mod-cc-ref>
          <Mod-cc-ref>PP-Module for VPN Gateways, version 2.0</Mod-cc-ref>
        </cc-pp-config-with>
        <cc-pkg-claim/>
      </CClaimsInfo>
    </sec:Conformance_Claims>      
  
  <sec:Security_Problem_Definition>
		The security problem is described in terms of the threats that the TOE is expected to address, assumptions about 
		the operational environment, and any organizational security policies that the OS is expected to enforce.
    <sec:Threats>
      <threats>

        <threat name="T.INSECURE_API">
          <description>
            Insecure application programming interfaces (APIs) and user interfaces can provide attackers with 
			opportunities to inject malicious code to the TOE or to retrieve sensitive information from it. Executing
			improper or unauthorized API functions or providing malicious input to achieve unintended or improper results from proper or authorized API functions can compromise network services and sensitive
			data leakage can take place through insecure interfaces.  
            
            <comment><h:br/><h:br/>Recommendations above to adjust threat name for more specificity and clarify the 
			description.</comment>
          </description>
          <addressed-by/>
          <rationale/>
          <addressed-by/>
          <rationale/>
          <addressed-by/>
          <rationale/>                  
        </threat>
        <threat name="T.ATTACKER_ACCESS">
          <description>
          An attacker may attempt to exploit services and functionality to intercept communications and mount attacks 
		  against machines in the network.
          
            <comment><h:br/><h:br/>Threat kept as-is but this seems unnecessary. Unless there are SDN-specific threat 
			cases (such as the API threat listed above), this just seems like an extension of threats already defined in 
			the NDcPP, and it should be fine for module SFRs to map back to threats from the base PP.</comment>
          </description>
        </threat>
      </threats>
      
    </sec:Threats>
	
	
    <sec:Assumptions>
      All assumptions from the Base-PP also apply to the TOE’s environment when it
      includes this PP‐Module in its conformance claims.
      <assumptions/>
    </sec:Assumptions>
    
    
    <sec:Organizational_Security_Policies>
      <OSPs/>
    </sec:Organizational_Security_Policies> 
  </sec:Security_Problem_Definition>
  
  <sec:Security_Objectives>
    
    <sec:Security_Objectives_for_the_Operational_Environment>
      All environmental security objectives from the Base-PP also apply to the TOE’s environment when it
      includes this PP‐Module in its conformance claims.
    </sec:Security_Objectives_for_the_Operational_Environment>
    
  </sec:Security_Objectives>
    
  <sec:Security_Requirements>
            <!-- Note: Every SFR must have a status = "threshold" or "optional" or "sel-based" or "objective" -->
    The SFRs included in this section are derived from Part 2 of the Common Criteria for Information Technology Security Evaluation, CC:2022R1, with
    additional extended functional components.<h:br/><h:br/>
    The CC defines operations on SFRs: assignments, selections, assignments within selections and refinements. This document uses the following font 
    conventions to identify the operations defined by the CC:<h:br/><h:br/>
    <h:ul>
      <h:li>Assignments are indicated with <h:i>italicized</h:i> text.</h:li>
      <h:li>Refinements made by the PP-Module author are indicated with <h:b>bold text</h:b> for added or substituted
        text and <h:s>strikethrough</h:s> text for removed text. Refinements are only applied to significant technical
        changes to existing SFRs; minor presentation changes with no technical impact (such as British vs
        American spelling differences) are not marked as refinements. Refinements are also indicated when
        an operation is added or substituted for an existing operation (e.g. the PP-Module completes an
        assignment in such a way that it introduces a selection into the assignment).<h:br/><h:br/>
        Note that for SFRs that are defined either in CC Part 2 or in this PP-Module’s Extended Components
        Definition, the refinement operation is used to indicate deviations from the defined component. For
        Base-PP SFRs that are modified by this PP-Module, the refinement operation is used to indicate
        deviations from the Base-PP’s definition of the SFR (i.e. if the Base-PP refined an SFR and that
        change is not affected by this PP-Module, it is not shown here as a refinement).</h:li><h:br/>
      <h:li>Selections are indicated with <h:i>italicized</h:i> text.</h:li>
      <h:li>Iteration is indicated by appending the SFR name with a slash and unique identifier suggesting the
        purpose of the iteration, e.g. ‘/SDN’ for an SFR relating to SDN functionality.</h:li>  
      <h:li>Extended SFRs are identified by having a label “EXT” after the SFR name.</h:li>
    </h:ul>
    Note that selections and assignments to be completed by the ST author are preceded with “selection:”
    and “assignment:”. If text is italicized and does not include either of these, it means that the selection or
    assignment has already been completed in this PP-Module and the ST author must use the text as
    written. 
    <base-pp name="Network Device" short="ND" id="ND" version="4.0" product="Network Device" plural="Network Devices">
      <url>https://old.niap-ccevs.org/MMO/PP/CPP_ND_V4.0.pdf</url>
      <cPP/>
          
          <!-- 5.1.1 Modified SFRs -->      
          <modified-sfrs>
            <!--        
        The SFRs listed in this section are defined in the GPOS PP and relevant to the secure operation of the
        VPN client. It is necessary for the ST author to complete selections and assignments for these SFRs in
        a specific manner in order to ensure that the functionality provided by the OS is consistent with the
        functionality required by the VPN client in order for it to conform to this PP-Module.  
-->        
            <!-- 5.1.1.1  -->
            <section title="Trusted Path/Channels (FTP)" id="nd-m-ftp">
              <base-sfr-spec cc-id="ftp_itc.1" id="nd-ftp-itc-1" title="Inter-TSF Trusted Channel">
                <consistency-rationale>This PP-Module expands the Base-PP SFR to define additional entities for trusted channels.</consistency-rationale>
                <description>
                  <h:p>This SFR has been modified from its definition in the NDcPP to define external interfaces to environmental entities that are particular to this specific technology type.</h:p>
                  <h:p>The text of the requirement is replaced with:</h:p>
                  <h:p>
                  <h:b>FTP_ITC.1.1</h:b> The TSF shall be capable of using [<h:b>selection:</h:b><h:i> IPsec, SSH, TLS, DTLS, HTTPS</h:i>] to provide a trusted communication channel between itself and authorized IT entities supporting the following capabilities: audit server, <h:b>northbound components, southbound components,</h:b> [<h:b>selection:</h:b> <h:i>authentication server, external east/west components [<h:b>assignment:</h:b> other capabilities], no other capabilities</h:i>] that is logically distinct from other
                  communication channels and provides assured identification of its end points
                  and protection of the channel data from disclosure and detection of modification of the channel data.
                  </h:p>
                  <h:p>
                    <h:b>FTP_ITC.1.2</h:b> The TSF shall permit [<h:b>selection:</h:b><h:i> the TSF, the authorized IT entities</h:i>] to initiate communication via the trusted channel.
                  </h:p>
                  <h:p>
                    <h:b>FTP_ITC.1.3</h:b> The TSF shall initiate communication via the trusted channel for
                    [<h:b>assignment:</h:b> <h:i>list of services for which the TSF is able to initiate
                      communications</h:i>].
                  </h:p>
                  <h:b>Application Note:</h:b> This PP-Module modifies this SFR to allow for the specification of any northbound, southbound, or east/west environmental components with which the TSF may implement protected communications. A conformant TOE may implement a distributed east/west configuration rather than the east/west entities being in the OE; in this case, the ST would define the TOE boundary as a distributed TOE in accordance with the NDcPP and use FPT_ITT.1 to define the interface between east/west distributed TOE components.  
                </description>
                <no-change/>
              </base-sfr-spec>
            </section>
      </modified-sfrs>
    
      <additional-sfrs/>
      <con-toe>
        When this PP-Module is used to extend the NDcPP, the TOE type for the overall TOE is still a network device. The TOE boundary is simply extended to 
        include SDN controller functionality that is provided by the network device. 
      </con-toe>
      <con-sec-prob>
        The threats defined by this PP-Module (see section 3.1) supplement those defined in the NDcPP as follows:
      </con-sec-prob>
      <con-op-en>
        TBD
      </con-op-en>
      <con-mod ref=""/>
      

    </base-pp>
    
    <man-sfrs>
      <section title="Security Audit (FAU)" id="man-fau">
      <!-- FAU_GEN.1/SDN -->
      <f-component id="fau-gen-1-sdn" cc-id="fau_gen.1" name="Audit Data Generation (SDN)" iteration="SDN">
        <f-element>
          <title>
            <comment>The SDN controller must have maximum auditing and logging of all unauthorized API usage, especially API usage attempts from users that are not in the API roles.<h:br/><h:br/>This will be populated as needed by the audit events for other SFRs<h:br/><h:br/></comment>
            
            The TSF shall implement functionality to generate audit data of the following <h:b>SDN</h:b> auditable events:
            <h:ol type="a">
              <h:li>Startup and shutdown of the audit functions;</h:li>
              <h:li>All auditable events for [<h:i>not specified</h:i>] level of audit;</h:li>
              <h:li>All unauthorized usage of all API endpoints, including create, read, update, and delete.</h:li>
              <h:li>All authorized usage of all API endpoints, including create, read, update, and delete.</h:li>
              <h:li>Full HTTP REST request parameters and values of any API requests sent to the SDNC controller API.</h:li>
              <h:li>All HTTP Response Codes returned from any HTTP API requests sent to the SDNC controller API.</h:li>
              <h:li>All error codes and error messages from usage of the API.</h:li>
              <h:li>[<h:i>all auditable events for mandatory SFRs specified in <xref g="t-audit-mandatory"/>, 
                selected SFRs in <xref g="t-audit-sel-based"/></h:i>].</h:li>
            </h:ol>
          </title>
        </f-element>
        <f-element>
          <title>The TSF shall record within the <h:b>SDN</h:b> audit data at
            least the following information: <h:ol type="a">
              <h:li>Date and time of the event, type of event, subject identity, (if relevant) the outcome 
                (success or failure) of the event; and</h:li>         
              <h:li>For each audit event type, based on the auditable event definitions of the functional components 
                included in the PP<h:b>-Module</h:b>/ST, [<h:i>Additional Audit Record Contents as specified in 
                  <xref g="t-audit-mandatory"/>, <xref g="t-audit-sel-based"/></h:i>].</h:li>
            </h:ol>
          </title>
          <note role="Application"><h:p>This SFR mandates that audit data be generated for startup and shutdown of the audit functions, which is a duplicate of FAU_GEN.1.1 in the Base-PP. If the TOE has one single audit mechanism, then the events used to conform to the Base-PP requirement also suffice here. Startup and shutdown of the audit functions in the context of the SDN controller portion of the TOE only need to be logged separately if the SDN controller has a different logging mechanism from what the Base-PP uses. Note also that in many cases the startup and shutdown of the audit functions cannot be forced on its own because the audit functions may be operational by default. In this case, logging for startup and shutdown of the TOE itself is sufficient. The purpose of this part of the requirement is to ensure that a malicious user cannot disable auditing to evade detection of other malicious use of the TOE.
          </h:p><h:p>
            The auditable events for the 'not specified' level of audit is intended to communicate that this PP-Module does not claim one of the pre-defined audit levels specified in CC Part 2; this is inherently satisfied by demonstrating that the TSF generates appropriate audit data for all events that are explicitly required by the PP-Module.
          </h:p>
          </note>
          <aactivity>
          <no-tests/>
          </aactivity>
        </f-element>
        <audit-event/>
      </f-component>
      
      
        
      </section>
      
      <section title="User Data Protection (FDP)" id="man-fdp">
      <!-- FDP_ACC.1 -->
      <f-component id="fdp-acc-1" cc-id="fdp_acc.1" name="Subset Access Control">
        <f-element>
          <title>The TSF shall enforce the [<h:i>API access control policy</h:i>] on [<h:i>all APIs used to access the TSF</h:i>].</title>
          <aactivity>
            <no-tests/>
          </aactivity>  
        </f-element>
        <audit-event/>
      </f-component>
      
      <!-- FDP_ACF.1 -->
      <f-component id="fdp-acf-1" cc-id="fdp_acf.1" name="Security Attribute-Based Access Control">
        <f-element>
          <title>
            <comment>
              <h:ol>
                <h:li>API Validation: The SDN controller must perform validation of API calls against the API templates.</h:li>
                <h:li>API Validation: The SDN controller must block API calls that fail validation.</h:li>
                <h:li>API Validation: The SDN controller must ensure that API calls conform to the API templates, and block any API calls that do not conform.</h:li>
              </h:ol>
              <h:br/><h:br/>
            </comment>
            The TSF shall enforce the [<h:i>API access control policy</h:i>] to objects based on the
            following: [<h:i>supported operations that can be performed on or by API objects, the validity of the API call being issued, whether the API call is authorized based on the subject's role</h:i>].
          </title>
        </f-element>
        <f-element>
          <title>The TSF shall enforce the following rules to determine if an operation among controlled
            subjects and controlled objects is allowed: [<h:i>an API call that is valid with respect to an allowlisted API template can manipulate an object if allowing this manipulation has been configured</h:i>].
          </title>
        </f-element>
        <f-element>
          <title>The TSF shall explicitly authorize access of subjects to objects based on the following
            additional rules: [<h:i>an allowlist explicitly authorizes the API request</h:i>].
          </title>
          <note role="Application">
           This does not explicitly assert that the request is valid with respect to the template, nor does it explicitly assert that the object being accessed can have the desired action performed on it.
          </note>
        </f-element>
        <f-element>
          <title>The TSF shall explicitly deny access of subjects to objects based on the following additional
            rules: <assignable>rules, based on security attributes, that explicitly deny access of subjects
              to objects</assignable>.
          </title>
          <note role="Application">The intent of this requirement is to give the ST author the ability to define a denylist that takes priority over the rules defined in FDP_ACF.1.2 and FDP_ACF.1.3. It may be the case that no explicit denylist is supported and the defined rules are followed in order with access being denied as a default condition if not otherwise specified by a rule. If this is the case, the ST author may complete the assignment with "no additional rules."</note>
        <aactivity>
          <no-tests/>
        </aactivity>  
        </f-element>
      <audit-event/>
      </f-component>
    </section>  
     
   
      <section title="Security Management (FMT)" id="man-fmt">
        <!-- FMT_API_EXT.1 -->
        <f-component id="fmt-api-ext-1" cc-id="fmt_api_ext.1" name="Management of API Behavior">
          <f-element>
            <title>
              <comment>•API Call Templates: The SDN controller must have API templates that define how API calls must be performed to access API objects.
                <h:br/><h:br/>
              </comment>
              The TSF shall provide the ability to define the following API templates <assignable>list of API templates</assignable> against the following API objects <assignable>list of API objects</assignable>.
            </title>
          </f-element>
          <f-element>
            <title>The TSF shall permit API templates to be defined if they meet the following specified rules: <assignable>rules determining allowable templates</assignable>.</title>
          </f-element>
          <audit-event/>
        </f-component>
        
        <!-- FMT_MOF.1/SDN -->
        <f-component id="fmt-mof-1-sdn" cc-id="fmt_mof.1" name="Management of Functions Behavior (SDN)" iteration="SDN">
          <f-element>
            <title>
              <comment>Manipulation Control: The SDN controller must let the administrator specify how the allowed API objects can be manipulated.
                <h:br/><h:br/>
              </comment>
              The TSF shall restrict the ability to [<h:i>modify the behaviour of</h:i>] the functions [<h:i>API access function as defined by FDP_ACC.1, API validity function as defined by FMT_API_EXT.1</h:i>] to [<h:i>API Administrator</h:i>].
            </title>
            <note role="Application">
              The restriction of modifying API access and validity functions to the API Administrator is intended to imply that the API User does not have the ability to modify API functions. The API User role having read-only access to these functions is not precluded by this requirement, as this requirement only relates to the ability to modify the behavior of the API.  
            </note>
          </f-element>
          <audit-event/>
        </f-component>
        
        <!-- FMT_SMF.1/SDN -->
        <f-component id="fmt-smf-1-sdn" cc-id="fmt_smf.1" name="Specification of Management Functions (SDN)" iteration="SDN">
          <f-element>
            <title>
              <comment>Allowlisting: The SDN controller must let the administrator be able to allowlist API templates so that configuration attempts from all other APIs not in the allowlist is blocked.
                <h:br/><h:br/>
              </comment>
              The TSF shall be capable of performing the following management functions: [<h:i>API access control as defined by FDP_ACF.1, API validity as defined by FMT_API_EXT.1</h:i>].
            </title>
            <note role="Application">API access control refers to configuring the allowlist for the permitted API templates. API validity refers to the ability to defining the templates for how API calls must be performed to access API objects. The intent of this requirement is for the TSF to have the ability to define both when and how a given API can be invoked.</note>
          </f-element>
          <audit-event/>
        </f-component>
        
        <!-- FMT_SMR.2/SDN -->
        <f-component id="fmt-smr-2-sdn" cc-id="fmt_smr.2" name="Restrictions on Security Roles (SDN)" iteration="SDN">
          <f-element>
            <title>
<comment>This could also just be done as a Modified SFR to FMT_SMR.2 in the NDcPP but it may be cleaner just to do it as its own iteration here.<h:br/><h:br/>
  <h:ol>
    <h:li>RBAC: The SDN controller must provide an API user role and API administrator role for role-based access control</h:li>
    <h:li>RBAC: The SDN controller must require that only administrators in the API administrator role can perform API calls.</h:li>
  </h:ol>
  <h:br/><h:br/>
</comment>
              The TSF shall maintain the roles: [<h:i>API User, API Administrator</h:i>].
            </title>
          </f-element>
          <f-element>
            <title>The TSF shall be able to associate users with roles.</title>
          </f-element>
          <f-element>
            <title>The TSF shall ensure that the conditions [<h:i>API User and API Administrator roles cannot be held simultaneously</h:i>] are satisfied.</title>
          </f-element>
          <audit-event/>
        </f-component>
        
      </section>


    </man-sfrs>
    <opt-sfrs/>
    <sel-sfrs/>
    <obj-sfrs/>
    <impl-dep-sfrs/>

  </sec:Security_Requirements>
    
  <!-- Remove this section if an Entropy Assessment is not needed -->
  <appendix title="Entropy Documentation and Assessment" id="entropyappendix"> This appendix
    describes the required supplementary information for the entropy source used by the OS. <h:br/>
    The documentation of the entropy source should be detailed enough that, after reading, the
    evaluator will thoroughly understand the entropy source and why it can be relied upon to provide
    sufficient entropy. This documentation should include multiple detailed sections: design
    description, entropy justification, operating conditions, and health testing. This documentation
    is not required to be part of the TSS. 
    <section id="entropydesign" title="Design Description">
      Documentation will include the design of the entropy source as a whole, including the
      interaction of all entropy source components. Any information that can be shared regarding the
      design should also be included for any third-party entropy sources that are included in the
      product. <h:br/> The documentation will describe the operation of the entropy source to include,
      how entropy is produced, and how unprocessed (raw) data can be obtained from within the
      entropy source for testing purposes. The documentation should walk through the entropy source
      design indicating where the entropy comes from, where the entropy output is passed next, any
      post-processing of the raw outputs (hash, XOR, etc.), if and where it is stored, and finally, how
      it is output from the entropy source. Any conditions placed on the process (e.g., blocking)
      should also be described in the entropy source design. Diagrams and examples are encouraged.
      <h:br/> This design must also include a description of the content of the security boundary of
      the entropy source and a description of how the security boundary ensures that an adversary
      outside the boundary cannot affect the entropy rate. <h:br/> If implemented, the design
      description shall include a description of how third-party applications can add entropy to the
      RBG. A description of any RBG state saving between power-off and power-on shall be included. </section>
    <section id="entropyjustification" title="Entropy Justification"> There should be a technical
      argument for where the unpredictability in the source comes from and why there is confidence
      in the entropy source delivering sufficient entropy for the uses made of the RBG output (by
      this particular OS). This argument will include a description of the expected min-entropy
      rate (i.e. the minimum entropy (in bits) per bit or byte of source data) and explain that
      sufficient entropy is going into the OS randomizer seeding process. This discussion will be
      part of a justification for why the entropy source can be relied upon to produce bits with
      entropy. <h:br/> The amount of information necessary to justify the expected min-entropy rate
      depends on the type of entropy source included in the product. <h:br/> For developer-provided
      entropy sources, in order to justify the min-entropy rate, it is expected that a large number
      of raw source bits will be collected, statistical tests will be performed, and the min-entropy
      rate determined from the statistical tests. While no particular statistical tests are required
      at this time, it is expected that some testing is necessary in order to determine the amount
      of min-entropy in each output. <h:br/> For third-party-provided entropy sources, in which the
      OS vendor has limited access to the design and raw entropy data of the source, the
      documentation will indicate an estimate of the amount of min-entropy obtained from this
      third-party source. It is acceptable for the vendor to 'assume' an amount of min-entropy,
      however, this assumption must be clearly stated in the documentation provided. In particular,
      the min-entropy estimate must be specified and the assumption included in the ST. <h:br/>
      Regardless of type of entropy source, the justification will also include how the DRBG is
      initialized with the entropy stated in the ST, for example by verifying that the min-entropy
      rate is multiplied by the amount of source data used to seed the DRBG or that the rate of
      entropy expected based on the amount of source data is explicitly stated and compared to the
      statistical rate. If the amount of source data used to seed the DRBG is not clear or the
      calculated rate is not explicitly related to the seed, the documentation will not be
      considered complete. <h:br/> The entropy justification shall not include any data added from any
      third-party application or from any state saving between restarts. </section>
    <section id="entropyoperatingconditions" title="Operating Conditions"> The entropy rate may be
      affected by conditions outside the control of the entropy source itself. For example, voltage,
      frequency, temperature, and elapsed time after power-on are just a few of the factors that may
      affect the operation of the entropy source. As such, documentation will also include the range
      of operating conditions under which the entropy source is expected to generate random data. It
      will clearly describe the measures that have been taken in the system design to ensure the
      entropy source continues to operate under those conditions. Similarly, documentation shall
      describe the conditions under which the entropy source is known to malfunction or become
      inconsistent. Methods used to detect failure or degradation of the source shall be included. </section>
    <section id="entropyhealthtesting" title="Health Testing"> More specifically, all entropy source
      health tests and their rationale will be documented. This includes a description of the health
      tests, the rate and conditions under which each health test is performed (e.g., at start,
      continuously, or on-demand), the expected results for each health test, and rationale
      indicating why each test is believed to be appropriate for detecting one or more failures in
      the entropy source. </section>
  </appendix>

  <appendix id="biblio" title="Bibliography"/>
  <bibliography>
          
    <entry id="bibCC">
        <tag>CC</tag>
        <description> Common Criteria for Information Technology Security Evaluation - <h:ul>
          <h:li><h:a href="https://www.commoncriteriaportal.org/files/ccfiles/CC2022PART1R1.pdf">Part
                1: Introduction and General Model</h:a>, CCMB-2022-11-001, CC:2022, Revision 1, November 2022</h:li>
          <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CC2022PART2R1.pdf">Part
                2: Security Functional Requirements</h:a>, CCMB-2022-11-002, CC:2022, Revision 1, November 2022.</h:li> 
            <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART3V3.1R4.pdf">Part
                3: Security Assurance Requirements</h:a>, CCMB-2022-11-003, CC:2022, Revision 1, November 2022.</h:li>
          <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CC2022PART4R1.pdf">Part
                4: Framework for the Specification of Evaluation Methods and Activities</h:a>, CCMB-2022-11-004, CC:2022, Revision 1, November 2022.</h:li>
          <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CC2022PART4R1.pdf">Part
                5: Pre-defined Packages of Security Requirements</h:a>, CCMB-2022-11-004, CC:2022, Revision 1, November 2022.</h:li>
          </h:ul></description>
      </entry>
      <entry id="bibCEM">
        <tag>CEM</tag>
        <description>
          <h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CEM2022R1.pdf">Common
            Common Methodology for Information Technology Security Evaluation</h:a>, CCMB-2022-11-006, CC:2022, Revision 1, November 2022.</description>
      </entry> 
      <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <h:a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf">
            Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</h:a>, OMB M-06-19, July
          12, 2006.</description>
      </entry>
    
  </bibliography>
  
</Module>
